#!/usr/bin/python
import Adafruit_BBIO.GPIO as GPIO
import curses
import time

#print("This is a simple etch-a-sketch program.")
#print("Begin by entering a single digit for the horizontal and vertical grid size")
#print("Use w to move up, s to move down, a to move left, and d to move right")
#print("c clears the etch-a-sketch and q is used to quit")
#print("Make sure your terminal screen is big eneough to accommmodate the grid size")
#print("If it's too small, you will get errors when moving to a position off the terminal")

GRID_SIZE = 10  #The etch-a-sketch dimensions will be size x size

#GPIOs
Button1="GP0_6"
Button2="GP0_5"
Button3="GP0_4"
Button4="GP0_3"
LED1 ="GREEN"
LED2="RED"
LED3="GP1_4"
LED4="GP1_3"

gpios=[Button1, Button2, Button3, Button4, LED1, LED2, LED3, LED4]

# Set the GPIO pins:
for i in range(len(gpios)):
        if(gpios[i][2]=='0'):
                GPIO.setup(gpios[i], GPIO.IN)

	else:
		GPIO.setup(gpios[i], GPIO.OUT)
# Map buttons to LEDs
map = {Button1: LED1, Button2: LED2, Button3: LED3, Button4: LED4}


#SPACING = 1 #Spacing between etch-a-sketch characters
#stdscr = curses.initscr() #Initialization for the curses import
#curses.noecho()
#curses.cbreak()

#position_x=10 #Keeps track of user position during game
#position_y=0
#xnum = 1 #Used for the etch-a-sketch boundaries
#ynum = 1

#stdscr.addstr(position_y,position_x,'X') #Used to add an X to current position
#playGame=True #True until the user quits the game

#Detect button pushes and change curser position accordingly
#def updateBoard(channel):
#	if channel == Button1:
#		if ynum!=1:
 #                       position_y = position_y - SPACING
  #                      stdscr.addstr(position_y, position_x, "X")
   #                     ynum=ynum-1
#
#	elif channel == Button2:
#		if ynum != GRID_SIZE:
 #                       position_y=position_y+SPACING
  #                      stdscr.addstr(position_y, position_x, "X")
   #                     ynum=ynum+1
#
#	elif channel == Button3:
#		if xnum != 1:
 #                       position_x=position_x-SPACING
  #                      stdscr.addstr(position_y, position_x, "X")
   #                     xnum = xnum-1
#
#	elif channel == Button4:
#		if xnum!=GRID_SIZE:
 #                       position_x=position_x + SPACING
  #                      stdscr.addstr(position_y, position_x, "X")
   #                     xnum=xnum+1

#print("Running...")

#for i in range(len(gpios))
